请不吝点赞、订阅、转发、打赏支持明镜与点点栏目。退群的时候，我们发生一个欢送的消息。还有就是有的消息被制定的时候，我们可以发生一个感谢的消息。然后我还会介绍一下从Telegram那边发给我们的机器人这边的消息的格式是怎么样子的，然后我们又是怎么样处理这些消息的。OK，那就开始我们的教程吧。

要让我们的机器人能够分辨不同的消息，我们必须理解一下Telegram发到我们机器人上面的消息的格式。这边是一个当有人加入一个群的时候，我们的机器人会收到的一个消息的格式。这个东西其实是我用的数据库，数据库的话我会在下节课的时候来介绍，这节课呢我们先忽略任何有关数据库的问题，所以你们有什么数据库的问题先不要问我，下节课的时候会讲。那在这个数据库里面，我记录了一个有人录取的消息。所以我们可以看到，我们先忽略这第一行，因为这第一行是数据库额外加进去的，那剩下的就是我们机器人收到的这样一个消息。所以我们知道在有人加入一个群的时候，我们会收到这样一条消息。然后这样一条消息的特征是它有一个这样三个东西：一个叫做New Chart Participant，还有一个是new chat member，还有一个new chat members。然后我们如果看到这样三个东西，我们就知道这是一个有人录取的消息。其实我们不需要去判断这三个东西，我们只需要判断这一个东西，我们就知道是有人录取了。

我来简单的介绍一下这个消息的格式。我们这个消息它首先有个update ID，我们现在可以忽略这个东西，我们主要关注的是这个message。这个Message ID呢就是代表某一条消息，在这个事例里面它代表的是一个有人录取的消息。所以我们可以用这个Message ID来对这个消息进行处理，比如说我们想要用机器人去删除一个消息的时候，我们会用到这个Message ID。From呢就是谁发这条消息，chart呢是在哪个群里面，然后new chat member就是谁被加进来了。所以从这条消息来看，就是由分割把这个人youtube channel这个机器人加进了华语原创联盟的这个群里面，是这样一个意思。

好，知道一样消息是这样一个格式以后，我们就可以来判断这个消息是一个怎么样的消息，然后做出相应的反应。好，我们回到我们的机器人。那在这个地方，我们已经写的时候其实我们是在判断这个消息有没有一个text。我们在判断这个消息有没有一个text。那我在这个地方，我们这个这个body，这个body呢其实是从e.postdata.contents，那这个contents实际上就是我刚才给你们看了这个整个东西，我把这整个东西放在body这个变量里面。所以说这个body代表的就是这整一个东西，所以body.message其实指的是这个message。然后这条消息是没有txt的对不对？我们换一条看一下，比如说这样一条消息，这样一条消息就是message是这个，然后txt是这个，所以这个就是一个文本的消息。我们机器人收到一个文本的消息，从这个群中由这个人发布的一个文本消息。我们这段代码其实判断的是这个消息是不是一个文本消息，如果是文本消息的话，我们处理一下，我们就预讯下面的代码。

那在我们这个配load里面，这个配load是我们机器人发送给Telegram那头的东西。那么就是说我们指定了我们的method是send message，意思是说我要发送一条消息，然后发送给谁呢？发送给这个chart id，就是这个chart id从哪来呢？就是body.message.chart id。所以一看的话可以看到是body.message.chat.id，就是这个东西。所以说我们知道一个chat id的时候，我们就可以给这个群发消息，我们知道这个群的id，我们就可以给它发消息了。然后这边指定的是我想发什么消息对不对？其他的是要markdown还是用html这种格式，这之前我讲过对不对？这个就是说我想把预览禁用掉。所以我们之前讲的课里面，我们其实已经是用到这样一个方式来判断我们的消息是一个怎样的消息，这个判断是判断这个消息是一个文本的消息。现在我们理解了这一点，我们就可以很容易的做到我们来判断这个消息是不是一个录取的消息。我想判断一个消息是不是录取的消息，这样做：if body.message.回到这个地方，我们知道我们要判断是不是有这个有这个成员，回到这里到这个我们这样子就可以就已经判断了是不是一个录取的消息。如果有人录取，我们就会执行这里面这些代码。

OK，所以我们现在要我们复制下这个payload来放在这个地方，然后我们这边return它。这里我们把这个消息换一下，保存一下。那好，那这样这种代表的意思就是说如果我发现这是一个有人录取你的消息，我们就发送这样一个消息回去。好，我们现在来试一下，我们发布一下。好，发布成功。好，这边我们来试一下，我现在加一个新的成员进来，我把这个机器人加进来。加进来没有生效，我知道为什么，因为我们在这个地方的时候，因为它去访问了这个TXT，但是因为这是一个录取消息，这边出错了，所以我要把这个代码把它移动到这个位置，让它在这段代码之前执行，所以就不必出错了。好，我们重新保存一下，发布一下。好，发布成功。我把这机器人移掉，重新把它加进来。好，你看到你好，欢迎加入本区。那这个呢就是我们刚刚写的代码。那这两个呢是我另外一个机器人，就是我现在正在服役的这个机器人发的消息，所以我们现在把它忽略到，这个是另外一个机器人发的消息，这个就是我们刚刚写的代码。这两个机器人都探测到这个录取消息，所以他发出了你好，欢迎加入本群这样一个消息。

但有时候我们想发送一些比较漂亮的消息，我们会说你好某某某，欢迎加入本群。那这个某某某就是这个新加入成员的名字。那怎么得到它呢？我们回来这边看一下这个消息，看到这个消息是NewCharmMember里面，其实它是有这个新成员的ID的，有它的ID，有它的名字对不对？所以我们可以读取这个信息来输出这个人的名字。所以我们如果要打出这个firstname的话呢，我们可以这样做：使用payload.txt等于你好加上body.message.newchartmember.firstname。这个firstname是我们从这个地方超过来了，这个firstname之间是有一个下滑线，你好这样在逗号，欢迎加入本群。好，我们把我们的text设成这样一条消息，那么它就会打出这个新成员的名字。我们发布试一下。好，发布成功。我们到机器人这里，我们重新来把这个机器人移除，再把它加回来。好，我们把这个东西，我们把这个新成员加进来。好，你看发布成功以后，你会看到你好Tim TextBoard 1，欢迎加入本群。有一些成员，它First Name和Last Name，所以有时候我们想把它结合起来，我们就可以写一个方法来得到这个新成员的名字。所以我们这边来加一个方法，这个方法叫Gain Name，它实际上就是把First Name和Last Name加在一起，但它会判断如果这个新成员有last name的话，就会把它加在一起，没有last name的话，它就会返回first name。所以这个地方我们可以直接使用这个方法来gain name，然后括号一直到这个位置。好，这样我转一下，这样它就会得到正确的名字，不管这个新成员有没有last name，有的话它就会显示last name，没有的话就不会显示。所以我们现在发布一下。好，发布成功。我们回到这里，我们重新把这个机器人加回来。好，把这个机器人加进来。好，这样可能是工作了，但是这个机器人它因为这是机器人嘛，所以它只有first name，所以它不会显示这个last name。这个时候我可以加一个别的成员试一下，现在如果随便加一个人进来，我随便加一个人进来，可以看到这样它就有first name last name，就会一起显示出来了。然后我把它从这边移出，可以看到这个是我正在服役的机器人，它打出这个名字是一个链接，你点按这个链接，它会显示这个机器人的消息的资料。所以说这个是怎么实现的呢？我先来给大家演示一下。

为了实现我刚才说的效果，我这边加了几个方法。首先这个就是主要的方法Get mentioned name，它这边其实就是用markdown一个语法把这个username表示成一个链接的形式，其实就是这个在game mention name里面，它其实是叫了这个method，这个就是这个实际上它就是一个这样的格式，所以变成一个链接。那我这边用了一个escape markdown，就是有一些用户名里面它可能会有一些下滑线或者是信号这种是markdown的语法，如果你碰到这种语法有时候就会出错，所以我们现在这边把它Escape一下，就是把这个比如说碰到像画线的时候，把它换成杠杠像画线，这样就不会出错了。所以我们现在把这个GateMentionName这个方法加进来了，我们替换掉这个GateName，GateMentionName，我们现在把它发布一下。好，现在应该OK了。我们把这个移除，然后把这个机器人加进来，看到你好TimTestable1，欢迎加入本群，看没有这个链接可以点了。那这样就是现了这个可以点的名字。同理可证，如果我们现在有人离群了，我们要发一套类似的消息，我们可以这样来做，我们复制这段代码，把它放在这里下，然后这边呢改成left chat member，意思是说我们这边如果是收到一条有人离取的消息的时候，我们要发一个消息，那我们可能就会说一路走好。好，这样子的话，我们就可以处理离取消息了。我们发布一下，就是发布的时候，发布的时候一定要记得这个地方要选新建行，否则会发布否则就没有发布成功。这边发布可以选之前的版本，是因为如果你觉得哎今天我发布这个版本不好，你这样使用旧的版本的话，那你可以选择之前旧的版本重新发布一下，那它就会回到之前旧的版本。好，我们来新建一个版本，我们发布一下。好，发布成功。然后回到机器人这地方，我们刚才是加了一个离取的功能，所以我们现在只要把这个机器人删除，我们就看到一个我们就会看到一条离取的消息。删掉以后，可以看到没有生效，我看一下这边是因为我这个地方忘了把这个换掉了，因为他这边是找不到这个，所以会出错，所以这个地方也要换掉。好，这两个压了好，我们现在重新发布一下。好，发布成功。我们现在把这个机器人加回来，把它加回来，加回来可以看到这条消息。现在我把这个机器人删掉。好，删掉看到这条消息，Tim TestBoard君，一路走好。好，我们现在等于是这两个代码可以处理了有人录群，有人出群。那如果有指令消息是怎样一个格式呢？我们来看一下，我之前有准备了一些机器人的消息的例子发在这个页面上，你们可以直接到我的博客里面找到它。这是有人加取的，这是有人退取的，有消息被置顶是这样一个格式，可以看到它是一个pinked message，所以我们如果看到这样一个东西，就知道是有消息被置顶。好，这边我们来加一段代码来处理这个置顶消息。置顶消息的话，就是我们判断是不是有pinked message，有的话呢，我这边就先得到是谁置顶这消息，然后置顶了谁的消息，然后这个text里面就说哎呀谁置顶了什么消息，然后代表这个发消息的人，感谢您。这是这条机器人做的。所以你回到回到这边可以看到这个消息，我们可以看到是这个人置顶了这条消息，然后是自顶了这个人发的消息。所以呢是Body的Message的From就是谁自顶的消息，Body的Message的Ping的Message的From就是最初发消息的那个人。好，我们现在保存一下，我们来发布。好，发布完成。我们来试一下。好，我们现在把这条消息自顶一下，自顶Ping一下，又没有生效，我看为什么。好，我把配肉給漏掉了。好，我把配肉添進來。好，最後就是長這樣。好，我們來重新發布一下。好，發布成功。好，我们重新来把这个消息给置顶一下。你看到，这是我原来机器人他发的消息，那这个是我们刚才这个机器人发的消息，消息是一样的，但是就是谁置顶的消息，本部代表发消息的人，感谢您。所以非常简单，当我们在判断一条消息是怎样的消息的时候，我们实际上就是判断这消息里面有某些元素在里面。怎么样得到这样的一个消息的内容呢？我会在下节课跟大家讲到。下节课我会介绍数据库，怎样在我们的机器人里面使用数据库，我们可以保存更多的东西到数据库里面。那加入了数据库以后，我们的机器人就可以变成非常的强大，有数据库和没有数据库，这完全是两个概念。我会介绍MangoDB，这是一个基于JSON的文本的数据库，所以你们是不需要学SQL的，这个数据库使用起来也非常的简单。

OK，那今天的教程就先到这里。喜欢我视频的朋友一定要记得帮我的视频点个赞，我这个视频系列看的人并不是很多，所以我其实一直是缺乏动力去更新它的，如果点赞的人多，就是对我最大的鼓励，我才会激起去继续把这个教程做下去。所以呢，请小伙伴一定要给我点个赞，当然希望每个小伙伴都可以订阅一下我的频道。OK，今天的教程就到这里，我们下期再见，拜拜。